var storage = Lawnchair({name:'losungen'}, function(e){      console.log('Storage open');});enyo.kind({  name: "Losungen.Main",  kind: enyo.VFlexBox,  className: "losungen-background",  components: [    {name: "getXML", kind: "WebService",      onSuccess: "gotXML",      onFailure: "gotError"    },    {kind: "Scroller", autoHorizontal: false, horizontal: false, flex: 1, components: [        {name: "packer", kind: "VFlexBox", pack: "center", align: "center", components: [            {name: "container", kind: "VFlexBox", showing: false, className: "losungen-container", components: [                {kind: "Toolbar", style: "background-color: transparent;", components: [                    {kind: "IconButton", icon: "images/menu-icon-back.png", onclick: "goBack", style: "background-color: transparent;"},                    {kind: "Spacer"},                    {kind: "Image", src: "images/date.png", className: "losungen-icons", onclick: "openPopup"},                    {kind: "Image", src: "images/info.png", className: "losungen-icons", onclick: "openAbout"},                    {kind: "Spacer"},                    {kind: "IconButton", icon: "images/menu-icon-forward.png", onclick: "goForward", style: "background-color: transparent;"}                ]},                {className: "losungen-content", components: [                    {name: "header", className: "losungen-header"},                    {name: "sonntag", className: "losungen-sonntag"},                    {name: "monatsSpruch", kind: "VFlexBox", showing: false, components: [                        {content: "Monatsspruch", className: "losung-caption"},                        {name: "mSpruch", className: "losung-text"},                        {name: "mVers", className: "losung-stelle"}                    ]},                    {name: "wochenSpruch", kind: "VFlexBox", showing: false, components: [                        {content: "Spruch", className: "losung-caption"},                        {name: "wSpruch", className: "losung-text"},                        {name: "wVers", className: "losung-stelle"}                    ]},                    {content: "Losungstext", className: "losung-caption"},                        {name: "losText", className: "losung-text"},                        {name: "losStelle", className: "losung-stelle"},                    {content: "Lehrtext", className: "losung-caption"},                        {name: "lehrText", className: "losung-text"},                        {name: "lehrStelle", className: "losung-stelle"},                    {name: "meta", className: "losungen-meta", kind: "VFlexBox", components: [                        {name: "predigt", allowHtml: true},                        {name: "tagesText", allowHtml: true},                        {name: "fortlaufenderText", allowHtml: true},                        {name: "psalm", allowHtml: true},                        {name: "lied", allowHtml: true},                        {name: "farbe", allowHtml: true}                    ]}                ]}            ]},            {name: "info", allowHtml: true, content: "&copy; <a href='http://www.ebu.de'>Evangelische Br&uuml;der-Unit&auml;t</a> - Herrnhuter Br&uuml;dergemeine. Mehr Informationen gibt es <a href='http://www.losungen.de'>hier</a>.", className: "losung-info"}        ]}    ]},    {name: "datePopup", scrim: true, kind: "Popup", components: [        {kind: "VFlexBox", align: "center", components: [            {content: "Bitte Datum ausw√§hlen", style: "text-align: center;"},            {name: "datePicker", kind: "DatePicker", label: "", minYear: 2014, maxYear: 2015, onChange: "changeDate"}        ]}    ]},    {name: "losAbout", kind: "Losungen.About"}  ],  create: function () {    this.inherited(arguments);    this.date = new Date();    this.year = this.date.getFullYear();    //Font Settings    if (window.PalmSystem && !enyo.fetchDeviceInfo().keyboardAvailable) {        this.addStyles("font-size: 20px;");        this.$.container.addStyles("border: 1px solid;");    } else {        this.$.packer.pack = "top";    }    api.createDB();    if (!window.PalmSystem)        storage.get("yearImported", enyo.bind(this, function (obj) {            //enyo.log(obj);            if (!obj || obj.year !== this.year) {                var url = enyo.fetchAppRootPath() + "misc/" + this.year + ".xml";                this.$.getXML.setUrl(url);                this.$.getXML.call();            } else {                this.getToday();            }        }));    else {        var year = parseInt(enyo.getCookie("yearImported"), 10);        //enyo.log(year);        if (!year || year !== this.year) {            enyo.log("Importing Data....");            var url = enyo.fetchAppRootPath() + "misc/" + this.year + ".xml";            this.$.getXML.setUrl(url);            this.$.getXML.call();        } else {            this.getToday();        }    }  },  getToday: function (date) {    date = (date) ? date: this.date;    this.date = date;    var tag = date.getDate();    var monat = date.getMonth() + 1;    if (monat < 10) { monat = "0" + monat;}    if (tag < 10) { tag = "0" + tag;}    var key = date.getFullYear() + "-" + monat + "-" + tag + "T00:00:00";    api.get(key, enyo.bind(this, function (obj) {		if (obj) {        this.$.header.setContent(obj.wTag + ", " + tag + "." + monat + "." + this.date.getFullYear());        this.$.losText.setContent(obj.losungsText);        this.$.losStelle.setContent(obj.losungsVers);        this.$.lehrText.setContent(obj.lehrText);        this.$.lehrStelle.setContent(obj.lehrVers);        if (obj.spruch !== "") {            this.$.wSpruch.setContent(obj.spruch);            this.$.wVers.setContent(obj.spruchVers);            this.$.wochenSpruch.show();        } else {            this.$.wochenSpruch.hide();        }        if (obj.monatsSpruch !== "") {            this.$.mSpruch.setContent(obj.monatsSpruch);            this.$.mVers.setContent(obj.monatsVers);            this.$.monatsSpruch.show();        } else {            this.$.monatsSpruch.hide();        }        this.$.predigt.setContent((obj.predigt !== "") ? "<b>Predigt:</b> " + obj.predigt : "");        this.$.psalm.setContent((obj.psalm !== "") ? "<b>Psalm:</b> " + obj.psalm : "");        this.$.lied.setContent((obj.lied !== "") ? "<b>Lied:</b> " + obj.lied : "");        this.$.farbe.setContent((obj.farbe !== "") ? "<b>Liturgische Farbe:</b> " + obj.farbe : "");        this.$.tagesText.setContent((obj.tagesText !== "") ? "<b>Tagestext:</b> " + obj.tagesText : "");        this.$.fortlaufenderText.setContent((obj.fortlaufenderText !== "") ? "<b>fortlaufender Text:</b> " + obj.fortlaufenderText : "");        this.$.sonntag.setContent((obj.sonntag !== "") ? obj.sonntag : "");        //Show Data        this.$.container.show();		}    }));  },  gotXML: function (inSender, inResponse, inRequest) {    var xmlobject = (new DOMParser()).parseFromString(inResponse, "text/xml");    var data = [];    for (var i=0;i<xmlobject.getElementsByTagName("Losungen").length; i++) {        data.push({key: xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("Datum")[0].firstChild.nodeValue,          losungsText: xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("Losungstext")[0].firstChild.nodeValue,          lehrText: xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("Lehrtext")[0].firstChild.nodeValue,          losungsVers: xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("Losungsvers")[0].firstChild.nodeValue,          lehrVers: xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("Lehrtextvers")[0].firstChild.nodeValue,          wTag: xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("Wtag")[0].firstChild.nodeValue,          sonntag: (xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("Sonntag")[0].firstChild) ? xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("Sonntag")[0].firstChild.nodeValue : "",          tagesText: (xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("Tagestext")[0].firstChild) ? xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("Tagestext")[0].firstChild.nodeValue : "",          fortlaufenderText: (xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("Fortlaufendertext")[0].firstChild) ? xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("Fortlaufendertext")[0].firstChild.nodeValue : "",          spruch: (xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("Spruch")[0].firstChild) ? xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("Spruch")[0].firstChild.nodeValue : "",          spruchVers: (xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("Spruchvers")[0].firstChild) ? xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("Spruchvers")[0].firstChild.nodeValue : "",          lied: (xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("Lied")[0].firstChild) ? xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("Lied")[0].firstChild.nodeValue : "",          predigt: (xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("Predigt")[0].firstChild) ? xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("Predigt")[0].firstChild.nodeValue : "",          psalm: (xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("Psalm")[0].firstChild) ? xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("Psalm")[0].firstChild.nodeValue : "",          farbe: (xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("LiturgischeFarbe")[0].firstChild) ? xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("LiturgischeFarbe")[0].firstChild.nodeValue : "",          monatsSpruch: (xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("Monatsspruch")[0].firstChild) ? xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("Monatsspruch")[0].firstChild.nodeValue : "",          monatsVers: (xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("Monatsspruchvers")[0].firstChild) ? xmlobject.getElementsByTagName("Losungen")[i].getElementsByTagName("Monatsspruchvers")[0].firstChild.nodeValue : ""        });    }    if (data.length !== 0) {      api.importData(data, enyo.bind(this, function () {          if (window.PalmSystem) {              enyo.log("Saved Data");              enyo.setCookie("yearImported", this.year);              this.getToday();          } else {              enyo.log("Saved Data!");              storage.save({key: "yearImported", year: this.year}, function () {                  enyo.log("Saved config");              });              this.getToday();          }      }));    }  },  gotError: function (inSender, inResponse, inRequest) {    if (inResponse !== null) {      this.gotXML(inSender, inResponse, inRequest);    } else {      this.$.info.setContent("Failure...");    }  },  goBack: function () {    this.date.setDate(this.date.getDate()-1);    this.getToday(this.date);  },  goForward: function () {    this.date.setDate(this.date.getDate()+1);    this.getToday(this.date);  },  openPopup: function () {    this.$.datePopup.openAtCenter();  },  openAbout: function ()  {    this.$.losAbout.openAtCenter();  },  changeDate: function (inSender) {    this.getToday(inSender.getValue());  }});enyo.kind({   name: "Losungen.About",   scrim: true,   kind: "Popup", components: [      {kind: "PalmService", service: "palm://com.palm.applicationManager/", method: "open"},      {content: "About " + enyo.fetchAppInfo().title, className: "popup-title"},      {content: "Version " + enyo.fetchAppInfo().version, className: "popup-version"},      {content: " &copy; 2010-2015 by <a href='http://zefanjas.de'>zefanjas.de</a>", className: "popup-info"},      {kind: "Button", flex: 1, caption: $L("Send eMail"), onclick: "sendMail"},      {kind: "Button", flex: 1, caption: "Close", onclick: "doCancel"}   ],   doCancel: function () {    this.close();   },   sendMail: function () {      this.$.palmService.call({         id: 'com.palm.app.email',            params: {               summary: $L("Support ") + enyo.fetchAppInfo().title + " TouchPad - " + enyo.fetchAppInfo().version            }      });   }});